rules_version = '2';

// General rules:
//  - least possible privilege
//  - disallow deletion
//  - updating seems OK (immutable seems less valuable in a declarative world)
//     - except for event sources

// Future:
//  - impersonation feature?

service cloud.firestore {
  match /databases/{database}/documents {
    match /activityTemplates/{template} {
      allow read: if request.auth != null;
    }
    match /users/{uid} {
      // any user can read, create, and update anything directly on their user document
      allow read, create, update: if request.auth.uid == uid;
      // allow read access to coaches, but only if they have the user assigned
      allow read: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isCoach == true &&
          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.assignments.hasAny([uid]);
      // allow read access to admins
      allow read, write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;

      // any user can read, create, and update their own question responses
      match /questionResponses/{document} {
        allow read, create, update: if request.auth.uid == uid;
        // allow read access to coaches
        allow read: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isCoach == true &&
            get(/databases/$(database)/documents/users/$(request.auth.uid)).data.assignments.hasAny([uid]);
      }
 
      // action disposition events are immutable: no updating allowed
      match /actionDispositionEvents/{document} {
        allow read, create: if request.auth.uid == uid;
      }

      // task disposition events are immutable: no updating allowed
      match /taskDispositionEvents/{document} {
        allow read, create: if request.auth.uid == uid;
      }
      
      // completion events are immutable: no updating allowed
      match /completionEvents/{document} {
        allow read, create: if request.auth.uid == uid;
      }

      // sentiment events are immutable: no updating allowed
      match /sentimentEvents/{document} {
       allow read, create: if request.auth.uid == uid;
      }

      match /assessmentConfigurationsLog/{document} {
        allow read, create, update: if request.auth.uid == uid;
        // allow read access to coaches
        allow read: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isCoach == true &&
            get(/databases/$(database)/documents/users/$(request.auth.uid)).data.assignments.hasAny([uid]);
      }

      // activity log entries are immutable: no updating allowed
      match /activityLogEntries/{document} {
       allow read, create: if request.auth.uid == uid;
      }

      // interview log entries are immutable: no updating allowed
      match /interviewLogEntries/{document} {
       allow read, create: if request.auth.uid == uid;
      }
      
      match /applicationLogEntries/{document} {
       allow read, create, update: if request.auth.uid == uid;
      }

      // any user can read, create, and update their own practice question inputs
      match /practiceQuestionInputs/{document} {
        allow read, create, update: if request.auth.uid == uid;
      }
    }

    match /userPreauthorizations/{email} {
      // any user can read, create, and update anything directly on their userPreauthorization document
      allow read, create, update: if request.auth.token.email == email;
      // allow access to admins
      allow read, create, update: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
  }
}
